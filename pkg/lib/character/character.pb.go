// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: character.proto

package character

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*Character `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            []string         `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
	Npc             *Npc             `protobuf:"bytes,3,opt,name=npc,proto3" json:"npc,omitempty"`
	Xp              *Xp              `protobuf:"bytes,4,opt,name=xp,proto3" json:"xp,omitempty"`
	Credits         *Credits         `protobuf:"bytes,5,opt,name=credits,proto3" json:"credits,omitempty"`
	Description     *Description     `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Morality        *Morality        `protobuf:"bytes,7,opt,name=morality,proto3" json:"morality,omitempty"`
	Motivation      *Motivation      `protobuf:"bytes,8,opt,name=motivation,proto3" json:"motivation,omitempty"`
	Career          *Career          `protobuf:"bytes,9,opt,name=career,proto3" json:"career,omitempty"`
	Talents         []*Talent        `protobuf:"bytes,10,rep,name=talents,proto3" json:"talents,omitempty"`
	Abilites        []*Ability       `protobuf:"bytes,19,rep,name=abilites,proto3" json:"abilites,omitempty"`
	Soak            int32            `protobuf:"varint,11,opt,name=soak,proto3" json:"soak,omitempty"`
	Wounds          *Wounds          `protobuf:"bytes,12,opt,name=wounds,proto3" json:"wounds,omitempty"`
	Strain          *Strain          `protobuf:"bytes,13,opt,name=strain,proto3" json:"strain,omitempty"`
	Defense         *Defense         `protobuf:"bytes,14,opt,name=defense,proto3" json:"defense,omitempty"`
	Characteristics *Characteristics `protobuf:"bytes,15,opt,name=characteristics,proto3" json:"characteristics,omitempty"`
	Skills          []*Skill         `protobuf:"bytes,16,rep,name=skills,proto3" json:"skills,omitempty"`
	Force           *Force           `protobuf:"bytes,17,opt,name=force,proto3" json:"force,omitempty"`
	Equipment       *Equipment       `protobuf:"bytes,18,opt,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{1}
}

func (x *Character) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Character) GetNpc() *Npc {
	if x != nil {
		return x.Npc
	}
	return nil
}

func (x *Character) GetXp() *Xp {
	if x != nil {
		return x.Xp
	}
	return nil
}

func (x *Character) GetCredits() *Credits {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *Character) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Character) GetMorality() *Morality {
	if x != nil {
		return x.Morality
	}
	return nil
}

func (x *Character) GetMotivation() *Motivation {
	if x != nil {
		return x.Motivation
	}
	return nil
}

func (x *Character) GetCareer() *Career {
	if x != nil {
		return x.Career
	}
	return nil
}

func (x *Character) GetTalents() []*Talent {
	if x != nil {
		return x.Talents
	}
	return nil
}

func (x *Character) GetAbilites() []*Ability {
	if x != nil {
		return x.Abilites
	}
	return nil
}

func (x *Character) GetSoak() int32 {
	if x != nil {
		return x.Soak
	}
	return 0
}

func (x *Character) GetWounds() *Wounds {
	if x != nil {
		return x.Wounds
	}
	return nil
}

func (x *Character) GetStrain() *Strain {
	if x != nil {
		return x.Strain
	}
	return nil
}

func (x *Character) GetDefense() *Defense {
	if x != nil {
		return x.Defense
	}
	return nil
}

func (x *Character) GetCharacteristics() *Characteristics {
	if x != nil {
		return x.Characteristics
	}
	return nil
}

func (x *Character) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *Character) GetForce() *Force {
	if x != nil {
		return x.Force
	}
	return nil
}

func (x *Character) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type Npc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank string `protobuf:"bytes,1,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *Npc) Reset() {
	*x = Npc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Npc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Npc) ProtoMessage() {}

func (x *Npc) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Npc.ProtoReflect.Descriptor instead.
func (*Npc) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{2}
}

func (x *Npc) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

type Xp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starting  int32 `protobuf:"varint,1,opt,name=starting,proto3" json:"starting,omitempty"`
	Awarded   int32 `protobuf:"varint,2,opt,name=awarded,proto3" json:"awarded,omitempty"`
	Available int32 `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *Xp) Reset() {
	*x = Xp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Xp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xp) ProtoMessage() {}

func (x *Xp) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xp.ProtoReflect.Descriptor instead.
func (*Xp) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{3}
}

func (x *Xp) GetStarting() int32 {
	if x != nil {
		return x.Starting
	}
	return 0
}

func (x *Xp) GetAwarded() int32 {
	if x != nil {
		return x.Awarded
	}
	return 0
}

func (x *Xp) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

type Credits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Starting  int32 `protobuf:"varint,1,opt,name=starting,proto3" json:"starting,omitempty"`
	Available int32 `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *Credits) Reset() {
	*x = Credits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credits) ProtoMessage() {}

func (x *Credits) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credits.ProtoReflect.Descriptor instead.
func (*Credits) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{4}
}

func (x *Credits) GetStarting() int32 {
	if x != nil {
		return x.Starting
	}
	return 0
}

func (x *Credits) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

type Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Species         string `protobuf:"bytes,1,opt,name=species,proto3" json:"species,omitempty"`
	Gender          string `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	BirthYear       int32  `protobuf:"varint,3,opt,name=birthYear,proto3" json:"birthYear,omitempty"`
	Build           string `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
	Hair            string `protobuf:"bytes,5,opt,name=hair,proto3" json:"hair,omitempty"`
	Eyes            string `protobuf:"bytes,6,opt,name=eyes,proto3" json:"eyes,omitempty"`
	NotableFeatures string `protobuf:"bytes,7,opt,name=notableFeatures,proto3" json:"notableFeatures,omitempty"`
}

func (x *Description) Reset() {
	*x = Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{5}
}

func (x *Description) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *Description) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Description) GetBirthYear() int32 {
	if x != nil {
		return x.BirthYear
	}
	return 0
}

func (x *Description) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *Description) GetHair() string {
	if x != nil {
		return x.Hair
	}
	return ""
}

func (x *Description) GetEyes() string {
	if x != nil {
		return x.Eyes
	}
	return ""
}

func (x *Description) GetNotableFeatures() string {
	if x != nil {
		return x.NotableFeatures
	}
	return ""
}

type Morality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int32  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Strength string `protobuf:"bytes,2,opt,name=strength,proto3" json:"strength,omitempty"`
	Weakness string `protobuf:"bytes,3,opt,name=weakness,proto3" json:"weakness,omitempty"`
}

func (x *Morality) Reset() {
	*x = Morality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Morality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Morality) ProtoMessage() {}

func (x *Morality) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Morality.ProtoReflect.Descriptor instead.
func (*Morality) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{6}
}

func (x *Morality) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Morality) GetStrength() string {
	if x != nil {
		return x.Strength
	}
	return ""
}

func (x *Morality) GetWeakness() string {
	if x != nil {
		return x.Weakness
	}
	return ""
}

type Motivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Specific string `protobuf:"bytes,2,opt,name=specific,proto3" json:"specific,omitempty"`
}

func (x *Motivation) Reset() {
	*x = Motivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Motivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Motivation) ProtoMessage() {}

func (x *Motivation) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Motivation.ProtoReflect.Descriptor instead.
func (*Motivation) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{7}
}

func (x *Motivation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Motivation) GetSpecific() string {
	if x != nil {
		return x.Specific
	}
	return ""
}

type Career struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source          string            `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Specializations []*Specialization `protobuf:"bytes,3,rep,name=specializations,proto3" json:"specializations,omitempty"`
	CareerSkills    []string          `protobuf:"bytes,4,rep,name=careerSkills,proto3" json:"careerSkills,omitempty"`
}

func (x *Career) Reset() {
	*x = Career{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Career) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Career) ProtoMessage() {}

func (x *Career) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Career.ProtoReflect.Descriptor instead.
func (*Career) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{8}
}

func (x *Career) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Career) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Career) GetSpecializations() []*Specialization {
	if x != nil {
		return x.Specializations
	}
	return nil
}

func (x *Career) GetCareerSkills() []string {
	if x != nil {
		return x.CareerSkills
	}
	return nil
}

type Specialization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source                 string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	AdditionalCareerSkills []string `protobuf:"bytes,3,rep,name=additionalCareerSkills,proto3" json:"additionalCareerSkills,omitempty"`
}

func (x *Specialization) Reset() {
	*x = Specialization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Specialization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Specialization) ProtoMessage() {}

func (x *Specialization) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Specialization.ProtoReflect.Descriptor instead.
func (*Specialization) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{9}
}

func (x *Specialization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Specialization) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Specialization) GetAdditionalCareerSkills() []string {
	if x != nil {
		return x.AdditionalCareerSkills
	}
	return nil
}

type Ability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Rank        int32  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *Ability) Reset() {
	*x = Ability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ability) ProtoMessage() {}

func (x *Ability) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ability.ProtoReflect.Descriptor instead.
func (*Ability) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{10}
}

func (x *Ability) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ability) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Talent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Career           string `protobuf:"bytes,2,opt,name=career,proto3" json:"career,omitempty"`
	Specialization   string `protobuf:"bytes,3,opt,name=specialization,proto3" json:"specialization,omitempty"`
	Rank             int32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Description      string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsForceTalent    bool   `protobuf:"varint,6,opt,name=isForceTalent,proto3" json:"isForceTalent,omitempty"`
	IsActive         bool   `protobuf:"varint,7,opt,name=isActive,proto3" json:"isActive,omitempty"`
	IsConflictSource bool   `protobuf:"varint,8,opt,name=isConflictSource,proto3" json:"isConflictSource,omitempty"`
	Source           string `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Talent) Reset() {
	*x = Talent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Talent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Talent) ProtoMessage() {}

func (x *Talent) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Talent.ProtoReflect.Descriptor instead.
func (*Talent) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{11}
}

func (x *Talent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Talent) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *Talent) GetSpecialization() string {
	if x != nil {
		return x.Specialization
	}
	return ""
}

func (x *Talent) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Talent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Talent) GetIsForceTalent() bool {
	if x != nil {
		return x.IsForceTalent
	}
	return false
}

func (x *Talent) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Talent) GetIsConflictSource() bool {
	if x != nil {
		return x.IsConflictSource
	}
	return false
}

func (x *Talent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Wounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold int32 `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Current   int32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *Wounds) Reset() {
	*x = Wounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wounds) ProtoMessage() {}

func (x *Wounds) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wounds.ProtoReflect.Descriptor instead.
func (*Wounds) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{12}
}

func (x *Wounds) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Wounds) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type Strain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold int32 `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Current   int32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *Strain) Reset() {
	*x = Strain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strain) ProtoMessage() {}

func (x *Strain) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strain.ProtoReflect.Descriptor instead.
func (*Strain) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{13}
}

func (x *Strain) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Strain) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type Defense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranged int32 `protobuf:"varint,1,opt,name=ranged,proto3" json:"ranged,omitempty"`
	Melee  int32 `protobuf:"varint,2,opt,name=melee,proto3" json:"melee,omitempty"`
}

func (x *Defense) Reset() {
	*x = Defense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Defense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Defense) ProtoMessage() {}

func (x *Defense) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Defense.ProtoReflect.Descriptor instead.
func (*Defense) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{14}
}

func (x *Defense) GetRanged() int32 {
	if x != nil {
		return x.Ranged
	}
	return 0
}

func (x *Defense) GetMelee() int32 {
	if x != nil {
		return x.Melee
	}
	return 0
}

type Characteristics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brawn     int32 `protobuf:"varint,1,opt,name=brawn,proto3" json:"brawn,omitempty"`
	Agility   int32 `protobuf:"varint,2,opt,name=agility,proto3" json:"agility,omitempty"`
	Intellect int32 `protobuf:"varint,3,opt,name=intellect,proto3" json:"intellect,omitempty"`
	Cunning   int32 `protobuf:"varint,4,opt,name=cunning,proto3" json:"cunning,omitempty"`
	Willpower int32 `protobuf:"varint,5,opt,name=willpower,proto3" json:"willpower,omitempty"`
	Presence  int32 `protobuf:"varint,6,opt,name=presence,proto3" json:"presence,omitempty"`
}

func (x *Characteristics) Reset() {
	*x = Characteristics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Characteristics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Characteristics) ProtoMessage() {}

func (x *Characteristics) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Characteristics.ProtoReflect.Descriptor instead.
func (*Characteristics) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{15}
}

func (x *Characteristics) GetBrawn() int32 {
	if x != nil {
		return x.Brawn
	}
	return 0
}

func (x *Characteristics) GetAgility() int32 {
	if x != nil {
		return x.Agility
	}
	return 0
}

func (x *Characteristics) GetIntellect() int32 {
	if x != nil {
		return x.Intellect
	}
	return 0
}

func (x *Characteristics) GetCunning() int32 {
	if x != nil {
		return x.Cunning
	}
	return 0
}

func (x *Characteristics) GetWillpower() int32 {
	if x != nil {
		return x.Willpower
	}
	return 0
}

func (x *Characteristics) GetPresence() int32 {
	if x != nil {
		return x.Presence
	}
	return 0
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rank           int32  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Charasteristic string `protobuf:"bytes,3,opt,name=charasteristic,proto3" json:"charasteristic,omitempty"`
	IsCareerSkill  bool   `protobuf:"varint,4,opt,name=isCareerSkill,proto3" json:"isCareerSkill,omitempty"`
	Type           string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{16}
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skill) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Skill) GetCharasteristic() string {
	if x != nil {
		return x.Charasteristic
	}
	return ""
}

func (x *Skill) GetIsCareerSkill() bool {
	if x != nil {
		return x.IsCareerSkill
	}
	return false
}

func (x *Skill) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Force struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank   int32         `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Powers []*ForcePower `protobuf:"bytes,2,rep,name=powers,proto3" json:"powers,omitempty"`
}

func (x *Force) Reset() {
	*x = Force{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Force) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Force) ProtoMessage() {}

func (x *Force) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Force.ProtoReflect.Descriptor instead.
func (*Force) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{17}
}

func (x *Force) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Force) GetPowers() []*ForcePower {
	if x != nil {
		return x.Powers
	}
	return nil
}

type ForcePower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source   string               `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Basic    []string             `protobuf:"bytes,3,rep,name=basic,proto3" json:"basic,omitempty"`
	Upgrades []*ForcePowerUpgrade `protobuf:"bytes,4,rep,name=upgrades,proto3" json:"upgrades,omitempty"`
}

func (x *ForcePower) Reset() {
	*x = ForcePower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForcePower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForcePower) ProtoMessage() {}

func (x *ForcePower) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForcePower.ProtoReflect.Descriptor instead.
func (*ForcePower) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{18}
}

func (x *ForcePower) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForcePower) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ForcePower) GetBasic() []string {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *ForcePower) GetUpgrades() []*ForcePowerUpgrade {
	if x != nil {
		return x.Upgrades
	}
	return nil
}

type ForcePowerUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Row         int32  `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`
	Column      int32  `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *ForcePowerUpgrade) Reset() {
	*x = ForcePowerUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForcePowerUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForcePowerUpgrade) ProtoMessage() {}

func (x *ForcePowerUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForcePowerUpgrade.ProtoReflect.Descriptor instead.
func (*ForcePowerUpgrade) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{19}
}

func (x *ForcePowerUpgrade) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ForcePowerUpgrade) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ForcePowerUpgrade) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ForcePowerUpgrade) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

type Equipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapons []*Weapon `protobuf:"bytes,1,rep,name=weapons,proto3" json:"weapons,omitempty"`
	Armor   []*Armor  `protobuf:"bytes,2,rep,name=armor,proto3" json:"armor,omitempty"`
	Gear    []*Gear   `protobuf:"bytes,3,rep,name=gear,proto3" json:"gear,omitempty"`
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{20}
}

func (x *Equipment) GetWeapons() []*Weapon {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *Equipment) GetArmor() []*Armor {
	if x != nil {
		return x.Armor
	}
	return nil
}

func (x *Equipment) GetGear() []*Gear {
	if x != nil {
		return x.Gear
	}
	return nil
}

type Weapon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Manufacturer string        `protobuf:"bytes,2,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Type         string        `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Skill        string        `protobuf:"bytes,4,opt,name=skill,proto3" json:"skill,omitempty"`
	Damage       int32         `protobuf:"varint,5,opt,name=damage,proto3" json:"damage,omitempty"`
	Critical     int32         `protobuf:"varint,6,opt,name=critical,proto3" json:"critical,omitempty"`
	Range        string        `protobuf:"bytes,7,opt,name=range,proto3" json:"range,omitempty"`
	Encumbrance  int32         `protobuf:"varint,8,opt,name=encumbrance,proto3" json:"encumbrance,omitempty"`
	Hardpoints   int32         `protobuf:"varint,9,opt,name=hardpoints,proto3" json:"hardpoints,omitempty"`
	Price        int32         `protobuf:"varint,10,opt,name=price,proto3" json:"price,omitempty"`
	Rarity       int32         `protobuf:"varint,11,opt,name=rarity,proto3" json:"rarity,omitempty"`
	IsRestricted bool          `protobuf:"varint,12,opt,name=isRestricted,proto3" json:"isRestricted,omitempty"`
	Special      []string      `protobuf:"bytes,13,rep,name=special,proto3" json:"special,omitempty"`
	Sources      []string      `protobuf:"bytes,14,rep,name=sources,proto3" json:"sources,omitempty"`
	Scale        string        `protobuf:"bytes,15,opt,name=scale,proto3" json:"scale,omitempty"`
	Attachments  []*Attachment `protobuf:"bytes,16,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Amount       int32         `protobuf:"varint,17,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Weapon) Reset() {
	*x = Weapon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weapon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weapon) ProtoMessage() {}

func (x *Weapon) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weapon.ProtoReflect.Descriptor instead.
func (*Weapon) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{21}
}

func (x *Weapon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Weapon) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Weapon) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Weapon) GetSkill() string {
	if x != nil {
		return x.Skill
	}
	return ""
}

func (x *Weapon) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *Weapon) GetCritical() int32 {
	if x != nil {
		return x.Critical
	}
	return 0
}

func (x *Weapon) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *Weapon) GetEncumbrance() int32 {
	if x != nil {
		return x.Encumbrance
	}
	return 0
}

func (x *Weapon) GetHardpoints() int32 {
	if x != nil {
		return x.Hardpoints
	}
	return 0
}

func (x *Weapon) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Weapon) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Weapon) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

func (x *Weapon) GetSpecial() []string {
	if x != nil {
		return x.Special
	}
	return nil
}

func (x *Weapon) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Weapon) GetScale() string {
	if x != nil {
		return x.Scale
	}
	return ""
}

func (x *Weapon) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Weapon) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source                 string          `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Type                   string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	HardpointsRequired     int32           `protobuf:"varint,4,opt,name=hardpointsRequired,proto3" json:"hardpointsRequired,omitempty"`
	BaseModifiers          string          `protobuf:"bytes,5,opt,name=baseModifiers,proto3" json:"baseModifiers,omitempty"`
	InstalledModifications []*Modification `protobuf:"bytes,6,rep,name=installedModifications,proto3" json:"installedModifications,omitempty"`
	OptionalModifications  []*Modification `protobuf:"bytes,7,rep,name=optionalModifications,proto3" json:"optionalModifications,omitempty"`
	Price                  int32           `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Rarity                 int32           `protobuf:"varint,9,opt,name=rarity,proto3" json:"rarity,omitempty"`
	IsRestricted           bool            `protobuf:"varint,10,opt,name=isRestricted,proto3" json:"isRestricted,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{22}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Attachment) GetHardpointsRequired() int32 {
	if x != nil {
		return x.HardpointsRequired
	}
	return 0
}

func (x *Attachment) GetBaseModifiers() string {
	if x != nil {
		return x.BaseModifiers
	}
	return ""
}

func (x *Attachment) GetInstalledModifications() []*Modification {
	if x != nil {
		return x.InstalledModifications
	}
	return nil
}

func (x *Attachment) GetOptionalModifications() []*Modification {
	if x != nil {
		return x.OptionalModifications
	}
	return nil
}

func (x *Attachment) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Attachment) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Attachment) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

type Modification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source   string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Modifier string `protobuf:"bytes,4,opt,name=modifier,proto3" json:"modifier,omitempty"`
}

func (x *Modification) Reset() {
	*x = Modification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Modification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modification) ProtoMessage() {}

func (x *Modification) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modification.ProtoReflect.Descriptor instead.
func (*Modification) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{23}
}

func (x *Modification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Modification) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Modification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Modification) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

type Armor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source       string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Defense      int32  `protobuf:"varint,3,opt,name=defense,proto3" json:"defense,omitempty"`
	Soak         int32  `protobuf:"varint,4,opt,name=soak,proto3" json:"soak,omitempty"`
	Encumbrance  int32  `protobuf:"varint,5,opt,name=encumbrance,proto3" json:"encumbrance,omitempty"`
	Hardpoints   int32  `protobuf:"varint,6,opt,name=hardpoints,proto3" json:"hardpoints,omitempty"`
	Price        int32  `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Rarity       int32  `protobuf:"varint,8,opt,name=rarity,proto3" json:"rarity,omitempty"`
	IsRestricted bool   `protobuf:"varint,9,opt,name=isRestricted,proto3" json:"isRestricted,omitempty"`
}

func (x *Armor) Reset() {
	*x = Armor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Armor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Armor) ProtoMessage() {}

func (x *Armor) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Armor.ProtoReflect.Descriptor instead.
func (*Armor) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{24}
}

func (x *Armor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Armor) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Armor) GetDefense() int32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *Armor) GetSoak() int32 {
	if x != nil {
		return x.Soak
	}
	return 0
}

func (x *Armor) GetEncumbrance() int32 {
	if x != nil {
		return x.Encumbrance
	}
	return 0
}

func (x *Armor) GetHardpoints() int32 {
	if x != nil {
		return x.Hardpoints
	}
	return 0
}

func (x *Armor) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Armor) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Armor) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

type Gear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Source       string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Encumbrance  int32  `protobuf:"varint,3,opt,name=encumbrance,proto3" json:"encumbrance,omitempty"`
	Price        int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Rarity       int32  `protobuf:"varint,5,opt,name=rarity,proto3" json:"rarity,omitempty"`
	IsRestricted bool   `protobuf:"varint,6,opt,name=isRestricted,proto3" json:"isRestricted,omitempty"`
	Amount       int32  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Gear) Reset() {
	*x = Gear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gear) ProtoMessage() {}

func (x *Gear) ProtoReflect() protoreflect.Message {
	mi := &file_character_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gear.ProtoReflect.Descriptor instead.
func (*Gear) Descriptor() ([]byte, []int) {
	return file_character_proto_rawDescGZIP(), []int{25}
}

func (x *Gear) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Gear) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Gear) GetEncumbrance() int32 {
	if x != nil {
		return x.Encumbrance
	}
	return 0
}

func (x *Gear) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Gear) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Gear) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

func (x *Gear) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_character_proto protoreflect.FileDescriptor

var file_character_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x22, 0xc0, 0x06, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x6e, 0x70, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x4e, 0x70, 0x63, 0x52, 0x03, 0x6e, 0x70, 0x63, 0x12, 0x1d, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x58, 0x70, 0x52, 0x02, 0x78, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x6f,
	0x72, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x35, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x08, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x61, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x61, 0x6b, 0x12, 0x29, 0x0a, 0x06, 0x77, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x57, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x77, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x29,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x52, 0x06, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x28, 0x0a,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x19, 0x0a, 0x03, 0x4e, 0x70, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x58,
	0x0a, 0x02, 0x58, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x43, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x59, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x79, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x79, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6e,
	0x6f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x08, 0x4d, 0x6f, 0x72, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x61, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x61, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x22,
	0x3c, 0x0a, 0x0a, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x22, 0x9d, 0x01,
	0x0a, 0x06, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x74, 0x0a,
	0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x22, 0x53, 0x0a, 0x07, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x98, 0x02, 0x0a, 0x06, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x06, 0x57, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65,
	0x6c, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x65, 0x6c, 0x65, 0x65,
	0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x77, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x77, 0x69, 0x6c, 0x6c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x05, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x06,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0x73, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x09, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x6d,
	0x6f, 0x72, 0x52, 0x05, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x67, 0x65, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x61, 0x72, 0x52, 0x04, 0x67, 0x65, 0x61, 0x72, 0x22, 0xe3,
	0x03, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x75, 0x6d, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x61, 0x72,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x94, 0x03, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x61, 0x72, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x68, 0x61, 0x72, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x4f, 0x0a, 0x16, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x15, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22, 0x6a, 0x0a, 0x0c, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xf5, 0x01, 0x0a, 0x05, 0x41, 0x72, 0x6d, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x61, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x61, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6e, 0x63, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x65, 0x6e, 0x63, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x61, 0x72, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x22,
	0xbe, 0x01, 0x0a, 0x04, 0x47, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x75, 0x6d, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_character_proto_rawDescOnce sync.Once
	file_character_proto_rawDescData = file_character_proto_rawDesc
)

func file_character_proto_rawDescGZIP() []byte {
	file_character_proto_rawDescOnce.Do(func() {
		file_character_proto_rawDescData = protoimpl.X.CompressGZIP(file_character_proto_rawDescData)
	})
	return file_character_proto_rawDescData
}

var file_character_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_character_proto_goTypes = []interface{}{
	(*Collection)(nil),        // 0: character.Collection
	(*Character)(nil),         // 1: character.Character
	(*Npc)(nil),               // 2: character.Npc
	(*Xp)(nil),                // 3: character.Xp
	(*Credits)(nil),           // 4: character.Credits
	(*Description)(nil),       // 5: character.Description
	(*Morality)(nil),          // 6: character.Morality
	(*Motivation)(nil),        // 7: character.Motivation
	(*Career)(nil),            // 8: character.Career
	(*Specialization)(nil),    // 9: character.Specialization
	(*Ability)(nil),           // 10: character.Ability
	(*Talent)(nil),            // 11: character.Talent
	(*Wounds)(nil),            // 12: character.Wounds
	(*Strain)(nil),            // 13: character.Strain
	(*Defense)(nil),           // 14: character.Defense
	(*Characteristics)(nil),   // 15: character.Characteristics
	(*Skill)(nil),             // 16: character.Skill
	(*Force)(nil),             // 17: character.Force
	(*ForcePower)(nil),        // 18: character.ForcePower
	(*ForcePowerUpgrade)(nil), // 19: character.ForcePowerUpgrade
	(*Equipment)(nil),         // 20: character.Equipment
	(*Weapon)(nil),            // 21: character.Weapon
	(*Attachment)(nil),        // 22: character.Attachment
	(*Modification)(nil),      // 23: character.Modification
	(*Armor)(nil),             // 24: character.Armor
	(*Gear)(nil),              // 25: character.Gear
}
var file_character_proto_depIdxs = []int32{
	1,  // 0: character.Collection.characters:type_name -> character.Character
	2,  // 1: character.Character.npc:type_name -> character.Npc
	3,  // 2: character.Character.xp:type_name -> character.Xp
	4,  // 3: character.Character.credits:type_name -> character.Credits
	5,  // 4: character.Character.description:type_name -> character.Description
	6,  // 5: character.Character.morality:type_name -> character.Morality
	7,  // 6: character.Character.motivation:type_name -> character.Motivation
	8,  // 7: character.Character.career:type_name -> character.Career
	11, // 8: character.Character.talents:type_name -> character.Talent
	10, // 9: character.Character.abilites:type_name -> character.Ability
	12, // 10: character.Character.wounds:type_name -> character.Wounds
	13, // 11: character.Character.strain:type_name -> character.Strain
	14, // 12: character.Character.defense:type_name -> character.Defense
	15, // 13: character.Character.characteristics:type_name -> character.Characteristics
	16, // 14: character.Character.skills:type_name -> character.Skill
	17, // 15: character.Character.force:type_name -> character.Force
	20, // 16: character.Character.equipment:type_name -> character.Equipment
	9,  // 17: character.Career.specializations:type_name -> character.Specialization
	18, // 18: character.Force.powers:type_name -> character.ForcePower
	19, // 19: character.ForcePower.upgrades:type_name -> character.ForcePowerUpgrade
	21, // 20: character.Equipment.weapons:type_name -> character.Weapon
	24, // 21: character.Equipment.armor:type_name -> character.Armor
	25, // 22: character.Equipment.gear:type_name -> character.Gear
	22, // 23: character.Weapon.attachments:type_name -> character.Attachment
	23, // 24: character.Attachment.installedModifications:type_name -> character.Modification
	23, // 25: character.Attachment.optionalModifications:type_name -> character.Modification
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_character_proto_init() }
func file_character_proto_init() {
	if File_character_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_character_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Npc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Xp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Morality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Motivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Career); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Specialization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Talent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Defense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Characteristics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Force); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForcePower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForcePowerUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Equipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weapon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Modification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Armor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_character_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_character_proto_goTypes,
		DependencyIndexes: file_character_proto_depIdxs,
		MessageInfos:      file_character_proto_msgTypes,
	}.Build()
	File_character_proto = out.File
	file_character_proto_rawDesc = nil
	file_character_proto_goTypes = nil
	file_character_proto_depIdxs = nil
}
